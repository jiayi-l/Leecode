/**
Given the root of a binary tree, return its maximum depth.
A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: 3

Example 2:
Input: root = [1,null,2]
Output: 2
*/

#Recursion
class Solution {
    public int maxDepth(TreeNode root) {
        // Base Condition
        if(root == null) return 0;
        // Hypothesis
        int left = maxDepth(root.left); // we continue to test the left 
        int right = maxDepth(root.right); //if left is null, we go to right
        // Induction
        return Math.max(left, right) + 1;
    }
}

#Video Explanation: https://www.youtube.com/watch?v=YT1994beXn0
