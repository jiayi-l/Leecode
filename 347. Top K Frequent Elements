/**
Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.

Example 1:
Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]

Example 2:
Input: nums = [1], k = 1
Output: [1]
*/

#solution
class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer, Integer> ct = new HashMap<>();
        for(int num:nums){
            if(!ct.containsKey(num)){
                ct.put(num,1);
            }else{
                int c = ct.get(num)+1;
                ct.put(num,c);
            }
        }
        
        List<Integer> res = new ArrayList<>(ct.keySet());
        res.sort((a,b)->ct.get(b)-ct.get(a));
        int[] r = new int[k];
        for(int i=0;i<k;i++){
            r[i]=res.get(i);
        }
        return r;
    }
}
