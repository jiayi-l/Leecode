/**
Given an array nums of size n, return the majority element.
The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

Example 1:
Input: nums = [3,2,3]
Output: 3

Example 2:
Input: nums = [2,2,1,1,1,2,2]
Output: 2
*/

#mySolution
class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
        int b = nums.length/2;
        int count =0;
        int i=0;

        while(i<nums.length){
            if(nums[i]==nums[i+b]){
                break;
            }
            while(nums[i]==nums[i+1]){
                i++;
            }
            i++;
        }
        return nums[i];
    }
}

#other
class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        return nums[n/2];
    }
}
