/**
Given a pattern and a string s, find if s follows the same pattern.
Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.
 
Example 1:
Input: pattern = "abba", s = "dog cat cat dog"
Output: true

Example 2:
Input: pattern = "abba", s = "dog cat cat fish"
Output: false

Example 3:
Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
*/

#solution
class Solution {
    public boolean wordPattern(String pattern, String s) {
        char[] p = pattern.toCharArray();
        String[] st = s.split(" ");
        if(p.length!=st.length){return false;}
        Map<Character, String> m = new HashMap<>();
        Map<String, Character> n = new HashMap<>();
        for(int i=0;i<p.length;i++){
            if(m.containsKey(p[i])&&!m.get(p[i]).equals(st[i])){
                return false;
            }
            if(n.containsKey(st[i]) && n.get(st[i])!=p[i]){
                return false;
            }
            m.put(p[i],st[i]);
            n.put(st[i],p[i]);
        }
        return true;

    }
}
