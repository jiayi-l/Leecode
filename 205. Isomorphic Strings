/**
Given two strings s and t, determine if they are isomorphic.
Two strings s and t are isomorphic if the characters in s can be replaced to get t.
All occurrences of a character must be replaced with another character while preserving the order of characters.
No two characters may map to the same character, but a character may map to itself.

Example 1:
Input: s = "egg", t = "add"
Output: true

Example 2:
Input: s = "foo", t = "bar"
Output: false

Example 3:
Input: s = "paper", t = "title"
Output: true
*/

#solution
class Solution {
    public boolean isIsomorphic(String s, String t) {
        Map<Character,Character> m = new HashMap<>();
        Map<Character,Character> n = new HashMap<>();
        char[] s_char = s.toCharArray();
        char[] t_char = t.toCharArray();
        if(s_char.length!=t_char.length){return false;}
        for(int i=0;i<s_char.length;i++){
            if(m.containsKey(s_char[i]) && t_char[i]!=m.get(s_char[i])){
                return false;
            }else if(n.containsKey(t_char[i]) && s_char[i]!=n.get(t_char[i])){
                return false;
                
            }else{
                m.put(s_char[i],t_char[i]);
                n.put(t_char[i],s_char[i]);
            }
        }
        return true;
    }
}
