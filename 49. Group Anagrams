/**
Given an array of strings strs, group the anagrams together. You can return the answer in any order.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Example 1:
Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]

Example 2:
Input: strs = [""]
Output: [[""]]

Example 3:
Input: strs = ["a"]
Output: [["a"]]
*/

#solution
class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        Map<String,List<String>> m = new HashMap<>();
        List<List<String>> res = new ArrayList<>();
        for(String str:strs){
            char[] sorted = str.toCharArray();
            Arrays.sort(sorted);
            String key = new String(sorted);
            if(m.containsKey(key)){
                m.get(key).add(str);
            }else{
                List<String> ls = new ArrayList<>();
                ls.add(str);
                m.put(key,ls);
            }
        }

        for(Map.Entry<String,List<String>> entry : m.entrySet()){
            res.add(entry.getValue());
        }
        return res;
    }
}
