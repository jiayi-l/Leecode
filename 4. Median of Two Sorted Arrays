/**
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

Example 1:
Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.

Example 2:
Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
*/

#solution
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int i1=0;
        int i2=0;
        int m=nums1.length;
        int n=nums2.length;
        int[] nums = new int[m+n];
        for(int i=0;i<m+n;i++){
            if(i1==m){
                nums[i]=nums2[i2++];
            }else if(i2==n){
                nums[i]=nums1[i1++];
            }else if(nums1[i1]>nums2[i2]){
                nums[i]=nums2[i2++];
            }else{
                nums[i]=nums1[i1++];
            }
        }
        if((m+n)%2==1){
            return nums[(m+n-1)/2];
        }
        int middle1 = nums[(m+n) / 2 - 1];
        int middle2 = nums[(m+n) / 2];
        return ((double) middle1 + (double) middle2) / 2.0;
    }
}

