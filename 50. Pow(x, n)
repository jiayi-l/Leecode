/**
Implement pow(x, n), which calculates x raised to the power n (i.e., xn).

Example 1:
Input: x = 2.00000, n = 10
Output: 1024.00000

Example 2:
Input: x = 2.10000, n = 3
Output: 9.26100

Example 3:
Input: x = 2.00000, n = -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25
*/

#solution
class Solution {
    public double myPow(double x, int n) {
        return pow(x,n,x);
    }
    public double pow(double x,int n, double res){
        long N = n;
        if(N<0){
            N=-N;
            x=1/x;
            res=1/res;
        }
        if(N==0){return 1;}
        if(N==1){return res;}
        if(N%2==0){
            return pow(x,(int)(N/2),res*res);
        }else{
            return res*pow(x,(int)(N-1),res);
        }
    }
}
