/**
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses. 

Example 1:
Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]

Example 2:
Input: n = 1
Output: ["()"]
*/

#solution
class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        helper(n,0,0, res, "");
        return res;
    }

    public void helper(int n, int n1, int n2, List<String> res, String g){
        if(g.length()==2*n){
            res.add(g);
            return;
        }

        if(n1<n){
            helper(n,n1+1,n2,res,g+"(");
        }
        if(n2<n1){
            helper(n,n1,n2+1,res,g+")");
        }
        
    }
}
