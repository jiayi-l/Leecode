/**
Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.
According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times. 

Example 1:
Input: citations = [3,0,6,1,5]
Output: 3
Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.
Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.

Example 2:
Input: citations = [1,3,1]
Output: 1
*/

#mySolution
class Solution {
    public int hIndex(int[] citations) {
        int l= citations.length;
        int[] map = new int[l+1];
        for(int i=0;i<l;i++){
            for(int j=0;j<l+1;j++){
                if(citations[i]>=j){
                    map[j]++;
                }
            }
        }

        for(int x=l;x>=0;x--){
            if(map[x]>=x){
                return x;
            }
        }
        return 0;
    }
}

#similar
class Solution {
    public int hIndex(int[] citations) {
       int n = citations.length;
       int[]freq = new int[n+1];

       for(int i=0;i<n;i++){
           if(citations[i]>citations.length){
               freq[citations.length]++;
           }else{
               freq[citations[i]]++;
           }
       }
        int cCount =0;
        for(int i=n;i>=0;i--){
            cCount+=freq[i];
            if(cCount>=i){
                return i;
            }
        }

        return 0;
    }
}

#sort
public int hIndex(int[] citations){

     Arrays.sort(citations);
     int n = citations.length;
   
     int idx = 0 ;

     while(idx < n &&  n-idx >citations[idx]){
         idx++;
     }

return n-idx;
